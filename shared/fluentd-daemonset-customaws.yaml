---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: fluentd
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: us-east-1a.staging.kubernetes.ruist.io-service-role
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: fluentd
      initContainers:
        - name: copy-fluentd-config
          image: busybox
          command: ['sh', '-c', 'cp /config-volume/* /etc/fluentd']
          volumeMounts:
            - name: config-volume
              mountPath: /config-volume
            - name: config
              mountPath: /etc/fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: einstein42/pgc_k8s_fluentd:latest
        imagePullPolicy: Always
        env:
          - name: LOG_GROUP_NAME
            value: "kubernetes.system"
          - name: AWS_REGION
            value: "us-east-1"
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config
          mountPath: /fluentd/etc
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        emptyDir: {}
      - name: config-volume
        configMap:
          name: fluentd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd
  namespace: kube-system
  labels:
    k8s-app: fluentd-logging
data:
  fluent.conf: |-
    <match fluent.**>
      @type null
    </match>

    <source>
      @type tail
      @id in_tail_container_logs
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    <filter kubernetes.**>
      @type record_transformer
      @id filter_rt_kube_logs
      enable_ruby true
      <record>
        service ${record["kubernetes"]["container_name"]}
        pod ${record["kubernetes"]["pod_name"]}
      </record>
    </filter>

    <filter kubernetes.**>
      @type parser
      key_name log
      reserve_data true
      remove_key_name_field true
      emit_invalid_record_to_error false
      <parse>
        @type json
      </parse>
    </filter>

    <match **pgc-system**>
      @type cloudwatch_logs
      log_group_name "kubernetes.pgc-system"
      log_stream_name_key service
      remove_log_group_name_key true
      remove_log_stream_name_key true
      auto_create_stream true
    </match>

    <match **nodeservers**>
      @type copy
      <store>
        @type cloudwatch_logs
        log_group_name "kubernetes.nodeservers"
        log_stream_name_key service
        remove_log_group_name_key true
        remove_log_stream_name_key true
        auto_create_stream true
      </store>
      <store>
        @type s3
        s3_bucket kube-nodeserver-logs
        s3_region us-east-1
        <instance_profile_credentials>
          ip_address 169.254.169.254
          port 80
        </instance_profile_credentials>
        path logs/${service}/
        <buffer service>
          @type file
          chunk_limit_size 10MB
          flush_at_shutdown true
          flush_interval 30s
          flush_thread_count 10
          path /var/log/fluent/s3
        </buffer>
      </store>
    </match>

    <match **>
      @type cloudwatch_logs
      log_group_name "kubernetes.system"
      log_stream_name_key service
      remove_log_group_name_key true
      remove_log_stream_name_key true
      auto_create_stream true
    </match>
