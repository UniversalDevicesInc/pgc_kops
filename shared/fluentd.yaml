awsRegion: us-east-1

rbac:
  create: true

fluentdConfig : |-
  <match fluent.**>
    @type null
  </match>

  <source>
    @type tail
    @id in_tail_container_logs
    path /var/log/containers/*.log
    pos_file /var/log/fluentd-containers.log.pos
    tag kubernetes.*
    read_from_head true
    <parse>
      @type json
      time_format %Y-%m-%dT%H:%M:%S.%NZ
    </parse>
  </source>

  <source>
    @type tail
    @id in_tail_etcd
    path /var/log/etcd.log
    pos_file /var/log/fluentd-etcd.log.pos
    tag etcd
    <parse>
      @type none
    </parse>
  </source>

  <source>
    @type tail
    @id in_tail_kube_proxy
    multiline_flush_interval 5s
    path /var/log/kube-proxy.log
    pos_file /var/log/fluentd-kube-proxy.log.pos
    tag kube-proxy
    <parse>
      @type kubernetes
    </parse>
  </source>

  <source>
    @type tail
    @id in_tail_kube_apiserver
    multiline_flush_interval 5s
    path /var/log/kube-apiserver.log
    pos_file /var/log/fluentd-kube-apiserver.log.pos
    tag kube-apiserver
    <parse>
      @type kubernetes
    </parse>
  </source>

  <source>
    @type tail
    @id in_tail_kube_controller_manager
    multiline_flush_interval 5s
    path /var/log/kube-controller-manager.log
    pos_file /var/log/fluentd-kube-controller-manager.log.pos
    tag kube-controller-manager
    <parse>
      @type kubernetes
    </parse>
  </source>

  <source>
    @type tail
    @id in_tail_kube_scheduler
    multiline_flush_interval 5s
    path /var/log/kube-scheduler.log
    pos_file /var/log/fluentd-kube-scheduler.log.pos
    tag kube-scheduler
    <parse>
      @type kubernetes
    </parse>
  </source>

  <source>
    @type tail
    @id in_tail_kube_apiserver_audit
    multiline_flush_interval 5s
    path /var/log/kubernetes/kube-apiserver-audit.log
    pos_file /var/log/kube-apiserver-audit.log.pos
    tag kube-apiserver-audit
    <parse>
      @type multiline
      format_firstline /^\S+\s+AUDIT:/
      # Fields must be explicitly captured by name to be parsed into the record.
      # Fields may not always be present, and order may change, so this just looks
      # for a list of key="\"quoted\" value" pairs separated by spaces.
      # Unknown fields are ignored.
      # Note: We can't separate query/response lines as format1/format2 because
      #       they don't always come one after the other for a given query.
      format1 /^(?<time>\S+) AUDIT:(?: (?:id="(?<id>(?:[^"\\]|\\.)*)"|ip="(?<ip>(?:[^"\\]|\\.)*)"|method="(?<method>(?:[^"\\]|\\.)*)"|user="(?<user>(?:[^"\\]|\\.)*)"|groups="(?<groups>(?:[^"\\]|\\.)*)"|as="(?<as>(?:[^"\\]|\\.)*)"|asgroups="(?<asgroups>(?:[^"\\]|\\.)*)"|namespace="(?<namespace>(?:[^"\\]|\\.)*)"|uri="(?<uri>(?:[^"\\]|\\.)*)"|response="(?<response>(?:[^"\\]|\\.)*)"|\w+="(?:[^"\\]|\\.)*"))*/
      time_format %Y-%m-%dT%T.%L%Z
    </parse>
  </source>

  <filter kube-apiserver-audit>
    @type record_transformer
    @id filter_rt_kube_apiserver_audit
    enable_ruby true
    <record>
      hostname #{ENV['FLUENT_HOSTNAME']}
      program kube-apiserver-audit
      severity info
      facility local0
      message ${record}
    </record>
  </filter>

  <filter kubernetes.**>
    @type kubernetes_metadata
  </filter>

  <filter kubernetes.**>
    @type record_transformer
    @id filter_rt_kube_logs
    enable_ruby true
    <record>
      service ${record["kubernetes"]["container_name"]}
      pod ${record["kubernetes"]["pod_name"]}
    </record>
  </filter>

  <filter kubernetes.**>
    @type parser
    key_name log
    reserve_data true
    remove_key_name_field true
    emit_invalid_record_to_error false
    <parse>
      @type json
    </parse>
  </filter>

  <match **pgc-system**>
    @type cloudwatch_logs
    log_group_name "kubernetes.pgc-system"
    log_stream_name_key service
    remove_log_group_name_key true
    remove_log_stream_name_key true
    auto_create_stream true
  </match>

  <match **nodeservers**>
    @type cloudwatch_logs
    log_group_name "kubernetes.nodeservers"
    log_stream_name_key service
    remove_log_group_name_key true
    remove_log_stream_name_key true
    auto_create_stream true
  </match>

  <match **nodeservers**>
    @type s3
    s3_bucket s3://kube-nodeserver-logs
    s3_region us-east-1
    <instance_profile_credentials>
      ip_address 169.254.169.254
      port 80
    </instance_profile_credentials>
    path /logs/${service}/
    s3_object_key_format %{path}/%{tag}.%{file_extension}
    <buffer service>
      @type file
      chunk_limit_size 10MB
      flush_at_shutdown true
      flush_interval 30s
      flush_thread_count 10
      path /var/log/fluent/s3
    </buffer>
  </match>

  <match *>
    @type cloudwatch_logs
    log_group_name "kubernetes.system"
    log_stream_name_key service
    remove_log_group_name_key true
    remove_log_stream_name_key true
    auto_create_stream true
  </match>